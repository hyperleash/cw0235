#install python, ansible, and pandas on host before doing any of this
- name: Generate Key on the localhost
  hosts: localhost
  become: yes
  tasks:
    - name: Generate Key on the localhost
      include_tasks: generate_keys.yml

- name: Distribute keys to cluster nodes
  hosts: cluster_nodes:client
  become: yes
  tasks:
    - name: Distribute keys to cluster nodes
      include_tasks: distribute_keys.yml

- name: prepare disk on cluster nodes
  hosts: cluster_nodes:client
  tasks:
    - name: prepare disk on cluster nodes
      include_tasks: mount_disk.yml

- name: install and start firewalld
  hosts: cluster_nodes:client:localhost
  become: yes
  tasks:
    - name: Install firewalld
      ansible.builtin.package:
        name: firewalld
        state: present

    - name: Start and enable firewalld service
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: yes

- name: set up Prometheus node exporter
  hosts: cluster_nodes:client:localhost
  become: true
  become_user: root
  tasks:
    - name: set up Prometheus node exporter
      include_tasks: prometheus_exporter.yml

- name: set up Prometheus on host
  hosts: localhost
  become: true
  become_user: root
  tasks:
    - name: set up Prometheus on host
      include_tasks: prometheus_host.yml

- name: install dependencies
  hosts: cluster_nodes:client
  become: yes
  tasks:
    - name: install dependencies
      include_tasks: install_dependencies.yml

- name: Download pdb70 on the client
  hosts: client
  become: yes
  tasks:
    - name: Download pdb70 on the client
      include_tasks: install_pdb70.yml

- name: Distribute unzipped pdb70 archive to other nodes
  hosts: cluster_nodes
  tasks:
    - name: Distribute unzipped pdb70 archive to other nodes
      include_tasks: distribute_data.yml
    
- name: Distribute pipeline scripts to other clients
  hosts: cluster_nodes:client
  become: yes
  tasks:
  - name: Copy pipeline scripts
    ansible.builtin.copy:
      src:  "/home/ec2-user/cw0235/scripts"
      dest: "/home/ec2-user/"

  - name: Copy experiment ids to process
    ansible.builtin.copy:
      src:  "/home/ec2-user/cw0235/experiment_ids.txt"
      dest: "/home/ec2-user/scripts/experiment_ids.txt"
 
- name: set worker resources facts before dividing work
  hosts: cluster_nodes:client
  become: yes
  tasks:
    - name: set worker resources facts before dividing work
      include_tasks: set_resource_facts.yml

- name: Divide work
  hosts: localhost
  tasks:
    - name: Divide work
      include_tasks: divide_work.yml
    
- name: Distribute work
  hosts: cluster_nodes:client
  become: yes
  tasks:
    - name: Distribute work
      include_tasks: distribute_work.yml

- name: Clean nodes of previous results
  hosts: cluster_nodes:client 
  tasks:
    - name: Clean nodes of previous results
      include_tasks: clean_workers.yml

- name: Clean host of previous results
  hosts: localhost
  tasks:
    - name: Clean host of previous results
      include_tasks: clean_host.yml
    
- name: Execute a Python script on remote nodes
  hosts: cluster_nodes:client
  tasks:
    - name: Run Python script
      ansible.builtin.command: python3 /home/ec2-user/scripts/pipeline_script.py /home/ec2-user/scripts/uniprotkb_proteome_UP000005640_2023_10_05.fasta /home/ec2-user/scripts/partial_ids.txt
  
- name: Prepare results master file
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Create file and add header line
      ansible.builtin.copy:
        dest: "/home/ec2-user/cw0235/all_results.txt"
        content: "query_id,best_hit,best_evalue,best_score,score_mean,score_std,score_gmean\n"
        force: no

- name: Fetch files from remote nodes and combine into a master file
  hosts: cluster_nodes:client
  gather_facts: true
  tasks:
    - name: Generate Key on the localhost
      include_tasks: fetch_results.yml
    
- name: Create finale results files
  hosts: localhost
  tasks:
    - name: Run Python script
      ansible.builtin.command: python3 /home/ec2-user/cw0235/process_results.py